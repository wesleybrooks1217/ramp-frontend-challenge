[{"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/index.tsx":"1","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/App.tsx":"2","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/AppContextProvider/index.tsx":"3","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/Instructions.tsx":"4","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/hooks/useTransactionsByEmployee.ts":"5","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/hooks/useEmployees.ts":"6","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts":"7","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/utils/constants.ts":"8","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/InputSelect/index.tsx":"9","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/Transactions/index.tsx":"10","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/utils/context.ts":"11","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/hooks/useCustomFetch.ts":"12","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx":"13","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/hooks/useWrappedRequest.ts":"14","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/utils/fetch.ts":"15","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/utils/requests.ts":"16","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/InputCheckbox/index.tsx":"17"},{"size":314,"mtime":1681411868000,"results":"18","hashOfConfig":"19"},{"size":3995,"mtime":1699506521255,"results":"20","hashOfConfig":"19"},{"size":675,"mtime":1681411868000,"results":"21","hashOfConfig":"19"},{"size":593,"mtime":1681411868000,"results":"22","hashOfConfig":"19"},{"size":930,"mtime":1699506184409,"results":"23","hashOfConfig":"19"},{"size":672,"mtime":1699506190001,"results":"24","hashOfConfig":"19"},{"size":1310,"mtime":1699506172778,"results":"25","hashOfConfig":"19"},{"size":135,"mtime":1681411868000,"results":"26","hashOfConfig":"19"},{"size":3755,"mtime":1699488842614,"results":"27","hashOfConfig":"19"},{"size":1201,"mtime":1699506515895,"results":"28","hashOfConfig":"19"},{"size":238,"mtime":1681411868000,"results":"29","hashOfConfig":"19"},{"size":2423,"mtime":1699506170315,"results":"30","hashOfConfig":"19"},{"size":1222,"mtime":1699506488612,"results":"31","hashOfConfig":"19"},{"size":666,"mtime":1681411868000,"results":"32","hashOfConfig":"19"},{"size":3135,"mtime":1699499217013,"results":"33","hashOfConfig":"19"},{"size":1657,"mtime":1699498875361,"results":"34","hashOfConfig":"19"},{"size":638,"mtime":1699490579620,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1itpr85",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/index.tsx",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/App.tsx",["89"],[],"import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\nimport { useCustomFetch } from \"./hooks/useCustomFetch\"\n\nexport function App() {\n   \n  const {clearCache} = useCustomFetch()\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  const [isLoading, setIsLoading] = useState(false)\n  const [numPerPage, setNumPerPage] = useState<number>(5)\n  const [showButton, setShowButton] = useState<boolean>(true)\n\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n\n\n  \n\n  const loadAllTransactions = useCallback(async (numTransactions: number | null) => {\n    setIsLoading(true)\n    transactionsByEmployeeUtils.invalidateData()\n\n    await employeeUtils.fetchAll(numTransactions, false)\n    \n    setIsLoading(false)\n    await paginatedTransactionsUtils.fetchAll(numTransactions, false)\n\n    \n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  useEffect(() => {\n    if (paginatedTransactions !== null) {\n      if (paginatedTransactions.nextPage === null) {\n        setShowButton(false)\n      } else {\n        setShowButton(true)\n      }\n    }\n  }, [paginatedTransactions])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData()\n      transactionsByEmployeeUtils.invalidateData()\n      setShowButton(false)\n      setIsLoading(true)\n      await transactionsByEmployeeUtils.fetchById(employeeId, false)\n      setIsLoading(false)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions(numPerPage)\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return\n            }\n            if (newValue.id === \"\") {\n              await loadAllTransactions(5)\n              setNumPerPage(5)\n              return;\n            }\n\n            await loadTransactionsByEmployee(newValue.id)\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions \n          transactions={transactions} \n          clearCache={clearCache}/>\n\n          {transactions !== null && showButton && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={async () => {\n                await loadAllTransactions(numPerPage + 5)\n                setNumPerPage(numPerPage+5)\n              }}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n","/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/AppContextProvider/index.tsx",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/Instructions.tsx",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/hooks/useTransactionsByEmployee.ts",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/hooks/useEmployees.ts",[],[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/utils/constants.ts",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/InputSelect/index.tsx",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/Transactions/index.tsx",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/utils/context.ts",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/hooks/useCustomFetch.ts",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/hooks/useWrappedRequest.ts",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/utils/fetch.ts",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/utils/requests.ts",[],[],"/Users/wesleybrooks/Desktop/ramp-frontend-challenge/ramp-fe-challenge/src/components/InputCheckbox/index.tsx",[],[],{"ruleId":"90","severity":1,"message":"91","line":69,"column":6,"nodeType":"92","endLine":69,"endColumn":61,"suggestions":"93"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'numPerPage'. Either include it or remove the dependency array.","ArrayExpression",["94"],{"desc":"95","fix":"96"},"Update the dependencies array to be: [employeeUtils.loading, employees, loadAllTransactions, numPerPage]",{"range":"97","text":"98"},[2441,2496],"[employeeUtils.loading, employees, loadAllTransactions, numPerPage]"]